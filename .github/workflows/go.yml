name: Go

on:
  push:
  pull_request:


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Test
      run: |
        go test -v ./...
        go test -v -race ./...
 
    - name: Make dist
      run: |
        if [ ! -d dist ]; then
          mkdir dist
        fi

    - name: Build
      run: go build -v -o dist/govanityurls .

    - name: upload-binary
      uses: actions/upload-artifact@v2
      with: 
        path: dist

    - name: upload-event
      uses: actions/upload-artifact@v2
      with:
        path: ${{ github.event_path }}
    - run: cat $GITHUB_EVENT_PATH
    - run: echo ${{ github.event_name }}
    - run: echo ${{ github.event.action }}
    - run: env
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
  bump_version:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.bump_version_and_push_tag.outputs.tag }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: Bump version and push tag
      uses: clly/github-tag-action@1.17.2
      id: bump_version_and_push_tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
  build-docker-image:
    runs-on: ubuntu-latest
    needs: bump_version
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      
      - name: Extract Tags
        id: extract-tags
        run: |
          TAGS="${{github.repository}}:latest"
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          fi
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            MINOR=${VERSION%.*}
            MAJOR=${MINOR%.*}
            TAGS="${TAGS},${{github.repository}}:${MAJOR},${{github.repository}}:${MINOR}"
          fi
          if [[ ! -z $VERSION ]]; then
            TAGS="${TAGS},${{github.repository}}:${VERSION}
          fi
          TAGS="${TAGS},${{github.repository}}:${GITHUB_SHA::8}"
          echo ::set-output name=tags::${TAGS}


      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug
      
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.extract-tags.outputs.tags }}
  create-release:
    runs-on: ubuntu-latest
    needs: build-docker-image
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: dist

      - run: ls -lR
